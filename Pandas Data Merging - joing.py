import pandas as pd

# DataFrame ‡∏ó‡∏µ‡πà 1: ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™ 1
data_q1 = {
    'Month': ['Jan', 'Feb'],
    'Sales': [100, 150],
    'Region': ['North', 'South']
}
df_q1 = pd.DataFrame(data_q1)
print("--- DataFrame Q1 ---")
print(df_q1)

# DataFrame ‡∏ó‡∏µ‡πà 2: ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™ 2
data_q2 = {
    'Month': ['Mar', 'Apr'],
    'Sales': [120, 180],
    'Region': ['North', 'East']
}
df_q2 = pd.DataFrame(data_q2)
print("\n--- DataFrame Q2 ---")
print(df_q2)

# --- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà 1: ‡∏ï‡πà‡∏≠‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á (axis=0) ---
# ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ñ‡∏ß‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
df_yearly_sales = pd.concat([df_q1, df_q2], axis=0)
print("\n--- ‡∏ï‡πà‡∏≠ DataFrame ‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á (axis=0) ---")
print(df_yearly_sales)

# -------------------------------------------------------------

# DataFrame ‡∏ó‡∏µ‡πà 3: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏°‡∏µ CustomerID ‡πÅ‡∏•‡∏∞ Name)
data_customer_info = {
    'CustomerID': ['C001', 'C002', 'C003'],
    'Name': ['Alice', 'Bob', 'Charlie']
}
df_customer_info = pd.DataFrame(data_customer_info)
print("\n--- DataFrame Customer Info ---")
print(df_customer_info)

# DataFrame ‡∏ó‡∏µ‡πà 4: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏°‡∏µ CustomerID ‡πÅ‡∏•‡∏∞ Email)
data_customer_contact = {
    'CustomerID': ['C001', 'C002', 'C003'],
    'Email': ['alice@mail.com', 'bob@mail.com', 'charlie@mail.com']
}
df_customer_contact = pd.DataFrame(data_customer_contact)
print("\n--- DataFrame Customer Contact ---")
print(df_customer_contact)

# --- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà 2: ‡∏ï‡πà‡∏≠‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô (axis=1) ---
# ‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô (3 ‡πÅ‡∏ñ‡∏ß) ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Email ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
# ‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡∏ß‡πà‡∏≤ CustomerID ‡∏à‡∏∞‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô (‡πÅ‡∏ï‡πà‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ô merge ‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤)
df_customer_full = pd.concat([df_customer_info, df_customer_contact], axis=1)
print("\n--- ‡∏ï‡πà‡∏≠ DataFrame ‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô (axis=1) ---")
print(df_customer_full)

# ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå CustomerID:
# df_customer_full_cleaned = pd.concat([df_customer_info, df_customer_contact['Email']], axis=1)
# print("\n--- ‡∏ï‡πà‡∏≠ DataFrame ‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô (axis=1) - ‡πÄ‡∏≠‡∏≤‡πÅ‡∏Ñ‡πà Email ---")
# print(df_customer_full_cleaned)


print("\n ---------------------‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö pd.concat()------------------------ \n")

#‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö pd.concat()
import pandas as pd

# DataFrame ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 1: ‡∏°‡∏µ Product, Sales, Region
df_m1 = pd.DataFrame({
    'Product': ['Laptop', 'Mouse'],
    'Sales': [10000, 500],
    'Region': ['North', 'East']
})
print("--- DataFrame Month 1 ---")
print(df_m1)

# DataFrame ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 2: ‡∏°‡∏µ Product, Sales ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Quantity ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ Region
df_m2 = pd.DataFrame({
    'Product': ['Keyboard', 'Monitor'],
    'Sales': [1200, 8000],
    'Quantity': [10, 5]
})
print("\n--- DataFrame Month 2 ---")
print(df_m2)

# ‡∏•‡∏≠‡∏á concat ‡∏Å‡∏±‡∏ô: ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
df_combined_sales = pd.concat([df_m1, df_m2]) # Default axis=0
print("\n--- Concatenated (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô, Index ‡πÄ‡∏î‡∏¥‡∏°) ---")
print(df_combined_sales)

# ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'Region' ‡πÅ‡∏•‡∏∞ 'Quantity' ‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ NaN ‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
# ‡πÅ‡∏•‡∏∞ Index 0, 1 ‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô!

# üöÄ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÉ‡∏ä‡πâ ignore_index=True ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Index ‡πÉ‡∏´‡∏°‡πà
df_combined_sales_reset_idx = pd.concat([df_m1, df_m2], ignore_index=True)
print("\n--- Concatenated (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô, ignore_index=True) ---")
print(df_combined_sales_reset_idx)
# Index ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà 0, 1, 2, 3 ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ Index ‡∏ã‡πâ‡∏≥

print("\n ---------------------‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö pd.concat()------------------------ \n")

import pandas as pd

# DataFrame ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥
df_full_time = pd.DataFrame({
    'EmployeeID': ['E001', 'E002'],
    'Name': ['Alice', 'Bob'],
    'Type': ['Full-Time', 'Full-Time']
})
print("--- Full-Time Employees ---")
print(df_full_time)

# DataFrame ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå
df_part_time = pd.DataFrame({
    'EmployeeID': ['E003', 'E004'],
    'Name': ['Charlie', 'David'],
    'Type': ['Part-Time', 'Part-Time']
})
print("\n--- Part-Time Employees ---")
print(df_part_time)

# üöÄ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
df_all_employees = pd.concat([df_full_time, df_part_time], ignore_index=True)
print("\n--- All Employees (Concatenated) ---")
print(df_all_employees)
# ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏°‡∏î ‡πÅ‡∏•‡∏∞ Index ‡∏Å‡πá‡∏ñ‡∏π‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÉ‡∏´‡∏°‡πà ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ DataFrame ‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå

'''‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î: ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ pd.concat()
‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ç‡πâ‡∏≠ 1: ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏ß‡∏¥‡∏ß‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏£‡∏≤‡∏¢‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™
‡∏•‡∏π‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏ß‡∏¥‡∏ß‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏à‡∏≤‡∏Å‡∏™‡∏≠‡∏á‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡πÅ‡∏¢‡∏Å‡∏Å‡∏±‡∏ô:'''

print("\n ---------------------‡πÅ‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î pd.concat()------------------------ \n")

import pandas as pd

df_video_q1 = pd.DataFrame({
'VideoID':['V001','V002','V003'],
'Views_Q1':[10000,15000,8000],
'Category':['Education','Entertainment','News']})

df_video_q2= pd.DataFrame({
'VideoID':['V004','V001','V005'],
'Views_Q2':[12000,5000,20000],
'Category':['Education','Education','Gaming']})

#‡πÄ‡∏ä‡πá‡∏Ñ dataframe (‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏≠‡∏ó‡∏≥‡∏Ñ‡∏£‡∏±‡∏ö)
print(df_video_q1) #‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ xD
print(df_video_q2)

df_all_video = pd.concat([df_video_q1,df_video_q2], ignore_index=True) # axis = 0 default ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏° (‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏≤ ‡∏à‡∏∞‡∏°‡∏µdata‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ NaN)
print("\n--- All video (Concatenated) ---")
print(df_all_video)

print("\n ---------------------‡πÅ‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î‡∏ó‡∏µ‡πà2 pd.concat()------------------------ \n")

df_user_profile = pd.DataFrame({
'UserID':['U001','U002','U003'],
'Username':['Alice','Bob','Charlie'],
'Age':[25,30,22 ]})

df_user_setting = pd.DataFrame({
'UserID':['U001','U002','U003'],
'Theme':['Dark','Light','Dark'],
'Notification_Status':['On','Off','On']})

print(df_user_profile)#‡πÄ‡∏ä‡πá‡∏Ñ dataframe (‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏≠‡∏ó‡∏≥‡∏Ñ‡∏£‡∏±‡∏ö)
print(df_user_setting)

df_user_profile_setting = pd.concat([df_user_profile,df_user_setting], axis=1,)
print("\n--- user profile and setting (Concatenated) ---")
print(df_user_profile_setting)



print("\n --------------------- pd.merge()------------------------ \n")
import pandas as pd

# ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (User Profile)
df_user_profile = pd.DataFrame({
    'UserID':['U001','U002','U003'],
    'Username':['Alice','Bob','Charlie'],
    'Age':[25,30,22 ]
})
print("--- User Profile ---")
print(df_user_profile)

# ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ (User Settings)
df_user_settings = pd.DataFrame({
    'UserID':['U001','U002','U003'],
    'Theme':['Dark','Light','Dark'],
    'Notification_Status':['On','Off','On']
})
print("\n--- User Settings ---")
print(df_user_settings)

# üöÄ Inner Join: ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Profile ‡πÅ‡∏•‡∏∞ Settings ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ UserID
# ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞ UserID ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏±‡πâ‡∏á df_user_profile ‡πÅ‡∏•‡∏∞ df_user_settings
df_merged_inner = pd.merge(df_user_profile, df_user_settings, on='UserID', how='inner')
print("\n--- Merged Data (Inner Join on UserID) ---")
print(df_merged_inner)
# ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤ UserID ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß!

# ----------------------------------------------------
# ‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ Join Type

df_orders = pd.DataFrame({
    'OrderID': [1, 2, 3, 4],
    'UserID': ['U001', 'U004', 'U002', 'U005'], # U004, U005 ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô df_user_profile
    'Amount': [100, 200, 150, 300]
})
print("\n--- User Orders (‡∏°‡∏µ UserID ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Profile) ---")
print(df_orders)

# üöÄ Left Join: ‡πÄ‡∏Å‡πá‡∏ö User Profile ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á Order ‡∏°‡∏≤‡πÉ‡∏™‡πà (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
df_left_join = pd.merge(df_user_profile, df_orders, on='UserID', how='left')
print("\n--- Left Join (Profile Left, Orders Right) ---")
print(df_left_join)
# ‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï U003 ‡∏à‡∏∞‡∏°‡∏µ NaN ‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå OrderID, Amount ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ Order

# üöÄ Right Join: ‡πÄ‡∏Å‡πá‡∏ö User Orders ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á Profile ‡∏°‡∏≤‡πÉ‡∏™‡πà (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
df_right_join = pd.merge(df_user_profile, df_orders, on='UserID', how='right')
print("\n--- Right Join (Profile Left, Orders Right) ---")
print(df_right_join)
# ‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï U004, U005 ‡∏à‡∏∞‡∏°‡∏µ NaN ‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Username, Age ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ Profile

# üöÄ Outer Join: ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á 2 ‡∏ù‡∏±‡πà‡∏á
df_outer_join = pd.merge(df_user_profile, df_orders, on='UserID', how='outer')
print("\n--- Outer Join (All Data) ---")
print(df_outer_join)
# ‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï U003 ‡∏°‡∏µ NaN ‡∏ù‡∏±‡πà‡∏á Order ‡πÅ‡∏•‡∏∞ U004, U005 ‡∏°‡∏µ NaN ‡∏ù‡∏±‡πà‡∏á Profile