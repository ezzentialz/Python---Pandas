import pandas as pd

df_user_profile = pd.DataFrame({
    'UserID': ['U001', 'U002'],
    'Name': ['Alice', 'Bob'],
    'JoinDate': ['2023-01-01', '2023-02-15'] # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏ã‡πâ‡∏≥
})
print("--- User Profile ---")
print(df_user_profile)

df_user_activity = pd.DataFrame({
    'UserID': ['U001', 'U002'],
    'LastLogin': ['2024-06-19', '2024-06-18'],
    'JoinDate': ['2023-01-01', '2023-02-15'] # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏ã‡πâ‡∏≥ (‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ Join)
})
print("\n--- User Activity ---")
print(df_user_activity)

# ‡∏•‡∏≠‡∏á merge ‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
df_merged_default = pd.merge(df_user_profile, df_user_activity, on='UserID', how='inner')
print("\n--- Merged (Default Suffixes) ---")
print(df_merged_default)
# ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô JoinDate_x ‡πÅ‡∏•‡∏∞ JoinDate_y

# üöÄ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÉ‡∏ä‡πâ suffixes ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
df_merged_suffixes = pd.merge(
    df_user_profile,
    df_user_activity,
    on='UserID',
    how='inner',
    suffixes=('_Profile', '_Activity') # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î suffix ‡πÄ‡∏≠‡∏á
)
print("\n--- Merged (Custom Suffixes) ---")
print(df_merged_suffixes)
# ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô JoinDate_Profile ‡πÅ‡∏•‡∏∞ JoinDate_Activity



import pandas as pd

# DataFrame ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô (‡∏°‡∏µ EmployeeID, Name, ‡πÅ‡∏•‡∏∞ ManagerID)
df_employees = pd.DataFrame({
    'EmployeeID': [101, 102, 103, 104],
    'Name': ['Alice', 'Bob', 'Charlie', 'David'],
    'ManagerID': [None, 101, 101, 102] # Alice (101) ‡πÑ‡∏°‡πà‡∏°‡∏µ Manager, Bob (102) ‡∏°‡∏µ Alice ‡πÄ‡∏õ‡πá‡∏ô Manager
})
print("--- Employee Data ---")
print(df_employees)

# üöÄ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: Self-Merge ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
# ‡πÄ‡∏£‡∏≤‡∏à‡∏∞ merge df_employees ‡∏Å‡∏±‡∏ö df_employees ‡πÄ‡∏≠‡∏á
# df_employees (‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢) ‡πÉ‡∏ä‡πâ EmployeeID ‡πÄ‡∏õ‡πá‡∏ô Key ‡∏Ç‡∏≠‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
# df_employees (‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤) ‡πÉ‡∏ä‡πâ ManagerID ‡πÄ‡∏õ‡πá‡∏ô Key ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
df_employees_with_manager = pd.merge(
    df_employees,               # Left DataFrame
    df_employees,               # Right DataFrame (‡∏ï‡∏±‡∏ß‡∏°‡∏±‡∏ô‡πÄ‡∏≠‡∏á)
    left_on='ManagerID',        # Key ‡∏Ç‡∏≠‡∏á‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢ (ManagerID ‡∏Ç‡∏≠‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô)
    right_on='EmployeeID',      # Key ‡∏Ç‡∏≠‡∏á‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤ (EmployeeID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£)
    how='left',                 # Left Join ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÑ‡∏ß‡πâ
    suffixes=('_Employee', '_Manager') # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î suffix ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏¢‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Name, EmployeeID ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
)
print("\n--- Employee Data with Manager Names (Self-Merge) ---")
print(df_employees_with_manager)

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
df_final_employees = df_employees_with_manager[['EmployeeID_Employee', 'Name_Employee', 'Name_Manager']]
df_final_employees = df_final_employees.rename(columns={
    'EmployeeID_Employee': 'EmployeeID',
    'Name_Employee': 'EmployeeName',
    'Name_Manager': 'ManagerName'
})
print("\n--- Employee Data (Cleaned) ---")
print(df_final_employees)




import pandas as pd

df_enrollment= pd.DataFrame({'StudentID':['S001','S002','S001','S003'],
'CourseID':['C101','C102','C102','C101'],
'EnrollmentDate':['2024-01-10','2024-01-15','2024-01-20','2024-01-25']})

df_attendance = pd.DataFrame({'StudentID':['S001','S001','S002','S003','S004'],
'CourseID':['C101','C102','C102','C101','C103'],
'AttendanceDate':['2024-02-01','2024-02-05','2024-02-10','2024-02-15','2024-02-20'],
'Status':['Present','Present','Absent','Present','Present']})

print(df_enrollment)
print(df_attendance)

#‡πÉ‡∏ä‡πâ pd.merge() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏ß‡∏°‡∏™‡∏≠‡∏á DataFrame ‡∏ô‡∏µ‡πâ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Multiple Keys 
# (StudentID ‡πÅ‡∏•‡∏∞ CourseID) ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ Left Join (how='left') ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ df_enrollment ‡πÄ‡∏õ‡πá‡∏ô DataFrame ‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢
print('\n ----------------pd.merge() ‡πÉ‡∏ä‡πâ on ‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£1','‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£2 ‡∏ô‡∏≥‡∏°‡∏≤‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÇ‡∏î‡∏¢‡∏¢‡∏∂‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢ how = left---------- \n')
df_enrollment_attendace = pd.merge(df_enrollment,df_attendance, on=['StudentID', 'CourseID'], how='left')
print(df_enrollment_attendace)


df_products_hierarchy = pd.DataFrame({'ProductID':['P001','P002','P003','P004','P005'],
'ProductName':['Desktop PC','Monitor','Keyboard','Laptop','Mouse'],
'ParentProductID':[None,'P001','P001',None,'P004']
})
print('\n ----------------dataFrame---------- \n')
print(df_products_hierarchy)

#‡πÉ‡∏ä‡πâ pd.merge() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏ß‡∏° df_products_hierarchy ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏°‡∏±‡∏ô‡πÄ‡∏≠‡∏á (Self-Merge) 
# ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏´‡∏•‡∏±‡∏Å (ParentProductName) ‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡πÜ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏¢‡πà‡∏≠‡∏¢
df_products_hierarchy_merge = pd.merge(df_products_hierarchy,df_products_hierarchy,left_on='ParentProductID', right_on='ProductID', suffixes=('_Parent','_Product'), how='left')
print(df_products_hierarchy_merge)

df_products_hierarchy_merge = df_products_hierarchy_merge[['ProductID_Parent','ProductName_Parent','ParentProductID_Parent','ProductName_Product']]
df_products_hierarchy_merge = df_products_hierarchy_merge.rename(columns={
    'ProductID_Parent' : 'ProductID',
    'ProductName_Parent' : 'ProductName',
    'ParentProductID_Parent' : 'ParentProductID',
    'ProductName_Product' : 'ParentProductName'
})
print(df_products_hierarchy_merge)